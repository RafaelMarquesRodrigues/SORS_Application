// Generated by gencpp from file robot_control/NavigationDriveService.msg
// DO NOT EDIT!


#ifndef ROBOT_CONTROL_MESSAGE_NAVIGATIONDRIVESERVICE_H
#define ROBOT_CONTROL_MESSAGE_NAVIGATIONDRIVESERVICE_H

#include <ros/service_traits.h>


#include <robot_control/NavigationDriveServiceRequest.h>
#include <robot_control/NavigationDriveServiceResponse.h>


namespace robot_control
{

struct NavigationDriveService
{

typedef NavigationDriveServiceRequest Request;
typedef NavigationDriveServiceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct NavigationDriveService
} // namespace robot_control


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::robot_control::NavigationDriveService > {
  static const char* value()
  {
    return "f9ac4e286e7f89fc602116455cd26e68";
  }

  static const char* value(const ::robot_control::NavigationDriveService&) { return value(); }
};

template<>
struct DataType< ::robot_control::NavigationDriveService > {
  static const char* value()
  {
    return "robot_control/NavigationDriveService";
  }

  static const char* value(const ::robot_control::NavigationDriveService&) { return value(); }
};


// service_traits::MD5Sum< ::robot_control::NavigationDriveServiceRequest> should match 
// service_traits::MD5Sum< ::robot_control::NavigationDriveService > 
template<>
struct MD5Sum< ::robot_control::NavigationDriveServiceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::robot_control::NavigationDriveService >::value();
  }
  static const char* value(const ::robot_control::NavigationDriveServiceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::robot_control::NavigationDriveServiceRequest> should match 
// service_traits::DataType< ::robot_control::NavigationDriveService > 
template<>
struct DataType< ::robot_control::NavigationDriveServiceRequest>
{
  static const char* value()
  {
    return DataType< ::robot_control::NavigationDriveService >::value();
  }
  static const char* value(const ::robot_control::NavigationDriveServiceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::robot_control::NavigationDriveServiceResponse> should match 
// service_traits::MD5Sum< ::robot_control::NavigationDriveService > 
template<>
struct MD5Sum< ::robot_control::NavigationDriveServiceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::robot_control::NavigationDriveService >::value();
  }
  static const char* value(const ::robot_control::NavigationDriveServiceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::robot_control::NavigationDriveServiceResponse> should match 
// service_traits::DataType< ::robot_control::NavigationDriveService > 
template<>
struct DataType< ::robot_control::NavigationDriveServiceResponse>
{
  static const char* value()
  {
    return DataType< ::robot_control::NavigationDriveService >::value();
  }
  static const char* value(const ::robot_control::NavigationDriveServiceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROBOT_CONTROL_MESSAGE_NAVIGATIONDRIVESERVICE_H
